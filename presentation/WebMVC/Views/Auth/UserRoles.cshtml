@model UserProfileViewModel

<div class="content-wrapper">
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>@ViewData["Title"]</h1>
                </div>
            </div>
        </div>
    </section>

    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card card-widget widget-user-2 shadow-sm">
                        <div class="widget-user-header bg-primary">
                            <div class="widget-user-image">
                                @if (Model.ProfilePicture.Length > 0 && Model.ProfilePicture != null)
                                {
                                    <img class="img-circle elevation-2" src="data:image/*;base64,@(Convert.ToBase64String(Model.ProfilePicture))" alt="Profile Picture" style="width:70px; height:70px; object-fit:cover; border-radius:100%">
                                }
                                else
                                {
                                    <img class="img-circle elevation-2" src="~/assets/img/avatar.png" alt="Profile Picture" style="width:70px; height:70px; object-fit:cover; border-radius:100%">
                                }
                            </div>
                            <h3 class="widget-user-username">
                                @Model.FirstName @Model.LastName
                                <button class="float-right btn btn-lg btn-secondary" onclick="history.back()">Go Back</button>
                            </h3>
                            <h5 class="widget-user-desc">@Model.UserName</h5>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">User Roles</h3>
                        </div>
                        <div class="card-body">
                            <div id="userRolesGrid" style="overflow: visible"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@section Styles{
}

@section Scripts{
    <script>
        $("#userRolesGrid").jsGrid({
            height: "500px",
            width: "100%",

            filtering: true,
            sorting: true,
            paging: false,
            editing: true,
            autoload: true,

            onItemUpdating: function (args) {
                previousItem = args.previousItem;
            },

            controller: {
                loadData: function (filter) {
                    var d = $.Deferred();

                    $.ajax({
                        type: "GET",
                        url: "../GetUserRoles/" + @Model.Uid,
                        data: filter,
                        dataType: "json"
                    }).done(function (response) {
                        d.resolve(response.data);
                    });

                    return d.promise();
                },
                updateItem: function (item) {
                    var d = $.Deferred();

                    $.ajax({
                        type: "PUT",
                        url: "../UpdateUserRoles/" + @Model.Uid,
                        data: item,
                        dataType: "json"
                    }).done(function (response) {
                        d.resolve(response.data);
                        $(function () { Swal.fire({ icon: 'success', title: 'Success!', text: 'User role updated successfully.' }) });
                    }).fail(function (response) {
                        d.resolve(previousItem);
                        $(function () { Swal.fire({ icon: 'error', title: 'Error!', text: response.data.message }) });
                    });

                    return d.promise();
                }
            },

            fields: [
                { title: "ID", name: "roleId", type: "number", width: 50, align: "center", editing: false },
                { title: "Name", name: "roleName", type: "text", editing: false },
                { title: "Selected", name: "isSelected", type: "checkbox", width: 50, filtering: false },
                { type: "control", deleteButton: false }
            ]
        });
    </script>
}