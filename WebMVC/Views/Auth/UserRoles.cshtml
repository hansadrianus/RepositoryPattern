@model UserProfileViewModel

<div class="content-wrapper">
    <div class="row">
        <div class="col-12">
            <div class="card card-widget widget-user-2 shadow-sm">
                <div class="widget-user-header bg-warning">
                    <div class="widget-user-image">
                        @if (Model.ProfilePicture.Length > 0 && Model.ProfilePicture != null)
                        {
                            <img class="img-circle elevation-2" src="data:image/*;base64,@(Convert.ToBase64String(Model.ProfilePicture))" alt="Profile Picture" style="width:40px;height:40px; object-fit:cover; border-radius:30px">
                        }
                        else
                        {
                            <img class="img-circle elevation-2" src="~/assets/img/avatar.png" alt="Profile Picture" style="width:40px;height:40px; object-fit:cover; border-radius:30px">
                        }
                    </div>
                    <h3 class="widget-user-username">@Model.FirstName @Model.LastName</h3>
                    <h5 class="widget-user-desc">@Model.UserName</h5>
                </div>
            </div>
        </div>
    </div>

    <section class="content">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">User Roles</h3>
            </div>
            <div class="card-body">
                <div id="userRolesGrid"></div>
            </div>
        </div>
    </section>
</div>

@section Styles{
    <link rel="stylesheet" href="~/assets/plugins/jsgrid/jsgrid.min.css">
    <link rel="stylesheet" href="~/assets/plugins/jsgrid/jsgrid-theme.min.css">
}

@section Scripts{
    <script src="~/assets/plugins/jsgrid/jsgrid.min.js"></script>
    <script>
        $(function () {
            $("#userRolesGrid").jsGrid({
                height: "auto",
                width: "100%",

                sorting: true,
                paging: false,
                editing: true,
                autoload: true,

                onItemUpdating: function (args) {
                    previousItem = args.previousItem;
                },

                controller: {
                    loadData: function () {
                        var d = $.Deferred();

                        $.ajax({
                            type: "GET",
                            url: "../GetUserRoles",
                            dataType: "json"
                        }).done(function (response) {
                            d.resolve(response.data);
                        });

                        return d.promise();
                    },
                    updateItem: function (item) {
                        var d = $.Deferred();

                        $.ajax({
                            type: "PUT",
                            url: "../UpdateUserRoles",
                            data: item
                        }).done(function (response) {
                            d.resolve(response.data);
                        }).fail(function () {
                            d.resolve(previousItem);
                        });
                    }
                },

                fields: [
                    { title: "ID", name: "roleId", type: "number", align: "center", width: 10, readOnly: true },
                    { title: "Name", name: "roleName", type: "text", readOnly: true },
                    { title: "Selected", name: "isSelected", type: "checkbox" },
                    { type: "control", deleteButton: false }
                ]
            });
        });
    </script>
}